概念:
Canvas是HTML5新增的组件，它就像一块幕布，可以用JavaScript在上面绘制各种图表、动画等。没有Canvas的年代，绘图只能借助Flash实现，页面不得不用JavaScript和Flash进行交互。有了Canvas，我们就再也不需要Flash了，直接使用JavaScript完成绘制。

使用场景:
常用于数据可视化操作

---------------------------------------
用法:
绘制线条：

路径(path)：
1.moveTo/lineTo		从哪开始(相对于画布的左上角)/画到哪个位置。操作的都是路径――不stroke没有图像
2.

beginPath()		清空路径(重新开始路径)


canvas画图标准过程:
	gd.beginPath()		//清空之前的
	xxx
	xxx
	xxx
	gd.closePath()		//闭合――避免有缝

-------------------------------------------------------------------------------
绘制矩形:
width:400, height:300, border:20
440,340

canvas里面，框是往两边扩
	gd.lineWidth=30;
	gd.strokeRect(100, 100, 400, 300); //(L,T,W,H),四个参数距左，上，宽，高

	最终的宽度=430
	最终的高度=330

canvas什么颜色都能用

-------------------------------------------------------------------------------

canvas里面也有“transform”：
1.rotate
2.scale
3.translate

-------------------------------------------------------------------------------

rotate
1.rotate必须在画图之前
	*一旦图形画完了――死住了，不动了
	**图形一旦绘制完毕，任何操作都改变不了

-------------------------------------------------------------------------------

角度	一圈：360度
弧度	一圈：2*PI弧度

360度=2*PI弧度
1度=2*PI/360弧度
n度=n*PI/180弧度

------------------

2*PI弧度=360度
1弧度=360/2*PI度
1弧度=180/PI度
n弧度=n*180/PI度

------------------

a度=a*PI/180弧度

canvas的旋转――参考原点画布的左上角旋转

-------------------------------------------------------------------------------
圆心旋转:
中心(w/2,h/2)：
gd.translate(l+w/2, t+h/2);
gd.strokeRect(-w/2, -h/2, w, h);

左上角：
gd.translate(l+0, t+0);
gd.strokeRect(-0, -0, w, h);

右下：
gd.translate(l+w, t+h);
gd.strokeRect(-w, -h, w, h);

50,50：
gd.translate(l+50, t+50);
gd.strokeRect(-50, -50, w, h);

原点(x, y)：
gd.translate(l+x, t+y);
gd.strokeRect(-x, -y, w, h);


gd.save()		//保存画布当前的状态
画图
gd.restore()            // 取出之前保存过的状态


gd.beginPath/closePath		保存：路径
gd.save/restore			保存：状态(旋转、位移、颜色...)

步骤:
gd.save();
gd.beginPath();
画图....
gd.closePath();
gd.restore();

-------------------------------------------------------------------------------
绘制圆弧,饼图:
//gd.arc(圆心x, 圆心y, 半径, 起点, 终点, 顺时针false/逆时针true)

弧：
1.也是弧度
2.起点――右边

x=cx+sin(a)*r
y=cy-cos(a)*r

-------------------------------------------------------------------------------
1.算比例:
500, 200, 300, 500	=>	1500
1/3, 2/15, 1/5, 1/3
120, 48, 72, 120

120, 48, 72, 120
0->120
120->168
168->240
240->360

-------------------------------------------------------------------------------

绘制文字:

1.x、y比较奇怪――文字的左下角
	y+h

fillText(str, x, y, maxWidth) 画布上绘制文本 ,相对于画布x,y坐标 ,文本最大宽度
strokeText(str, x, y, maxWidth)

-------------------------------------------------------------------------------

绘制图片:
1.canvas的图形保存下来
	toDataURL(type)
	base64――img.src、window.open、上传
2.图片画在canvas里
	drawImage(图片, x, y)
	图片：img标签、Image对象、另一个canvas、base64字符串

	Image对象：	方便、JS动态加载
			加上onload

-------------------------------------------------------------------------------

drawImage(图片, x, y);

-------------------------------------------------------------------------------

完整版：
drawImage(图片, sx, sy, sw, sh, dx, dy, dw, dh)
sx, sy, sw, sh		源：相对于图片x,y坐标,宽，高
dx, dy, dw, dh		目标:相对于画布x,y坐标,宽，高

-------------------------------------------------------------------------------

封装Canvas对象：

原点(x, y)：
gd.translate(l+x, t+y);
gd.strokeRect(-x, -y, w, h);

-------------------------------------------------------------------------------

var r1=new Rect(xxx);
var r2=new Rect(xxx);
var r3=new Rect(xxx);

...

setInterval(function (){
	gd.clearRect(0, 0, oC.width, oC.height);

	r1.draw(gd);
	r2.draw(gd);
	r3.draw(gd);
}, xxx);

-------------------------------------------------------------------------------
canvas画钟表作业:
12	360
1点	30
2	60
n	30*n

60	360
1	6
2	12
n	6*n













